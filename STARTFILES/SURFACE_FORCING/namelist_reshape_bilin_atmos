&comments
 -----------------------------------------------------------------------------------
 - grid_inputs holds parameters for the scripgrid routine which reformats information 
   about the input grids
 - scripgrid always needs a coordinates.nc file in the
   current directory and creates the remapped grid file correspondingly
 - it uses the following namelist block to determine its actions
     method:  only 'regular' is yet implemented, this assumes a cartesian grid
     input_lon: name of longitude variable in the input_file
     input_lat: name of latitude variable in the input_file
     nemo_lon: name of longitude variable in the coordinates.nc
     nemo_lat: name of latitude variable in the coordinates.nc

     nemo_mask and nemo_mask_value are not used in the fortran code
     input_mask and input_mask_value set a mask = 1 and 
          put mask = 0 when values are lower than input_mask_value

/
&grid_inputs
    input_file    = './ERA5_MSL_y1993.nc'
    nemo_file     = './coordinates.nc'
    datagrid_file = 'remap_data_grid_atmos.nc'
    nemogrid_file = 'remap_nemo_grid_atmos.nc'
    method        = 'regular'
    input_lon     = 'lon'
    input_lat     = 'lat'
    nemo_lon      = 'glamt'
    nemo_lat      = 'gphit'
    nemo_mask     = 'none'
    nemo_mask_value  =  0
    input_mask       = 'none'
    input_mask_value = 0
/
&comments
 -----------------------------------------------------------------------------------
 - remap_inputs holds parameters for the scrip routine which calculates the weights
   needed to convert between two grids
 - two remap grid files are required as output by scripgrid
 - num_maps is either 1 or 2 depending on whether the reverse transformation is required
 - one or two interp_file names are then supplied; these hold the weights to convert 
   one grid to another
 - the map_name variable is just descriptive
 - map_method can be 'bilinear' 'conservative' or 'bicubic' (the latter untested)
 - normalize_opt should usually be 'frac' or else the user needs to do this scaling
   manually (this seems to the case for fractional ice cover)
 - restrict_type should be 'latitude' or 'latlon' in which case num_srch_bins only are 
   used in one or two directions
 - use_grid_area fields override the scrip calculation of area in case the model gets
   slightly different answers, but the area needs to be supplied in the input files
 - output_opt may be supplied and set to either 'scrip' or 'ncar-csm'
/
&remap_inputs
    num_maps      = 1
    grid1_file    = 'remap_data_grid_atmos.nc'
    grid2_file    = 'remap_nemo_grid_atmos.nc'
    interp_file1  = 'data_nemo_bilin_atmos.nc'
    interp_file2  = 'nemo_data_bilin_atmos.nc'
    map1_name     = 'atmos to nemo bilin Mapping'
    map2_name     = 'nemo to atmos bilin Mapping'
    map_method    = 'bilinear'
    normalize_opt = 'frac'
    output_opt    = 'scrip'
    restrict_type = 'latitude'
    num_srch_bins = 90 
    luse_grid1_area = .false.
    luse_grid2_area = .false.
/
&interp_inputs
    input_file   = "nothing.nc"
    interp_file  = "data_nemo_bilin_atmos.nc"
    input_name   = "nothing"
    input_start  = 1,1
    input_stride = 1,1
    input_stop   = 0,0
/

&interp_outputs
    output_file    = "nothing.nc"
    output_mode    = "create"
    output_dims    = 'x', 'y'
    output_scaling = "topo|1.0"
    output_name    = 'topo'
    output_lon     = 'x'
    output_lat     = 'y'
/

&comments
 -----------------------------------------------------------------------------------
 - shape_inputs holds parameters for the scripshape routine which rearranges the weights
   into the form needed by the nemo on the fly interpolation code.
/
&shape_inputs
    interp_file = 'data_nemo_bilin_atmos.nc'
    output_file = 'weights_era5_SANH_bilin.nc'
    ew_wrap     = -1
/
